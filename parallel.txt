# run multiple commands in linux/windows, with thread pool

# ------------------------------
# linux command : parallel
# reference : https://www.slashroot.in/how-run-multiple-commands-parallel-linux

sudo apt install moreutils
sudo apt install parallel


-j n            Run n jobs in parallel
-k              Keep same order


# e.g.
seq 1 3 | parallel -j 5 -I{} wget https://storage.googleapis.com/test-bucket-sarath/junkfile{}
ls | parallel -j 10 gzip
parallel -j 10 gzip ::: *
parallel ::: "python abc.py p1 p4" "python xyz.py p2 p3"


# put to file first
cat list-of-urls.txt
    https://storage.googleapis.com/test-bucket-sarath/junkfile1
    https://storage.googleapis.com/test-bucket-sarath/junkfile2
    https://storage.googleapis.com/test-bucket-sarath/junkfile3

parallel -j 10 -a list-of-urls.txt wget


# ------------------------------
# by xargs, ref : http://coldattic.info/post/7/
seq 15 | xargs -P 4             -n 1 echo
seq 15 | xargs --max-procs=4    -n 1 echo

#        -P max-procs, --max-procs=max-procs
#              Run up to max-procs processes at a time; the default is 1.  If max-procs is 0, xargs will run as many processes as possible at a time.  Use the -n option or the -L  option
#              with  -P;  otherwise  chances are that only one exec will be done.  While xargs is running, you can send its process a SIGUSR1 signal to increase the number of commands to
#              run simultaneously, or a SIGUSR2 to decrease the number.  You cannot increase it above an implementation-defined limit (which is shown with --show-limits).  You cannot de‚Äê
#              crease it below 1.  xargs never terminates its commands; when asked to decrease, it merely waits for more than one existing command to terminate before starting another.
#


